{
    "contents" : "#' @S3method Ops rv\nOps.rv <- function(e1, e2) {\n  # Assume that two random variables are independent\n  if (is.rv(e1) && is.rv(e2)) {\n    vals <- as.vector(outer(e1, e2, .Generic))\n    probs <- as.vector(outer(probs(e1), probs(e2), \"*\"))\n    return(rv(vals, probs))\n  }\n  \n  # Figure out which one is the rv, and which one is the number\n  if (is.rv(e1)) {\n    rv <- e1\n    n <- e2\n  } else {\n    rv <- e2\n    n <- e1\n  }\n  rv(NextMethod(), probs(rv))\n}\n\n\n#' Random if.\n#' \n#' @param x an event (a random variable with logical values)\n#' @param yes number to return if event occurs\n#' @param no number to return if event doesn't occur\n#' @export\n#' @examples\n#' dice <- rv(1:6)\n#' rif(dice > 3, -1, 5)\nrif <- function(x, yes, no) {\n  stopifnot(is.numeric(yes), length(yes) == 1)\n  stopifnot(is.numeric(no), length(no) == 1)\n\n  rv(c(no, yes), probs(x))\n}",
    "created" : 1386684569579.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4228486899",
    "id" : "542F3C67",
    "lastKnownWriteTime" : 1386689214,
    "path" : "~/Documents/courses/13-devtools/rv2/R/ops.r",
    "project_path" : "R/ops.r",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}